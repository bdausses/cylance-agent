# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: vsts-chef-task-install-chefdk@1
  displayName: 'Install ChefDK (Current)'
  inputs:
    chefDKForceInstall: true

- task: vsts-chef-task-test-kitchen@1
  displayName: 'TestKitchen - converge'
  inputs:
    tkAzureEndpoint: 'Solutions Architecture(b02e675a-cee0-49bd-a056-daa7ed05bf4e)'
    tkCommand: 'converge'
    tkKitchenFile: '.kitchen.yml'

- task: vsts-chef-task-test-kitchen@1
  displayName: 'TestKitchen - verify'
  inputs:
    tkAzureEndpoint: 'Solutions Architecture(b02e675a-cee0-49bd-a056-daa7ed05bf4e)'
    tkCommand: 'verify'
    tkKitchenFile: '.kitchen.yml'

- task: vsts-chef-task-test-kitchen@1
  displayName: 'TestKitchen - destroy'
  condition: always()
  inputs:
    tkAzureEndpoint: 'Solutions Architecture(b02e675a-cee0-49bd-a056-daa7ed05bf4e)'
    tkCommand: 'destroy'
    tkKitchenFile: '.kitchen.yml'

- task: vsts-chef-task-cookbook-version@1
  inputs:
    chefCookbookVersion: '$(Build.BuildNumber)'
    chefCookbookMetadata: '$(Build.SourcesDirectory)/cookbooks/mycookbook/metadata.rb'

- task: vsts-chef-task-cookbook-upload@1
  inputs:
    chefServerEndpoint: 'bdausses-test.chef-demo.com'
    chefCookbookPath: '$(Build.SourcesDirectory)/cookbooks'

